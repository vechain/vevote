name: Contract Checks

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      contracts-changed: ${{ steps.changes.outputs.contracts }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check for Changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            contracts:
              - 'packages/contracts/**'

  solidity-coverage:
    name: Run Coverage and Upload
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.contracts-changed == 'true'
    env:
      NODE_OPTIONS: --max-old-space-size=8192

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node v22
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Cache Solidity compilers
        uses: actions/cache@v3
        with:
          path: ~/.cache/hardhat-nodejs
          key: ${{ runner.os }}-solc-${{ hashFiles('./packages/contracts/hardhat.config.ts') }}
          restore-keys: |
            ${{ runner.os }}-solc-

      - name: Run Solidity Coverage Tests
        run: yarn test:coverage:solidity

      - name: Create .nyc_output Directory
        run: mkdir -p packages/contracts/.nyc_output

      - name: Generate Final Coverage Report
        working-directory: packages/contracts
        run: yarn coverage:report

      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v4
        with:
          directory: packages/contracts/coverage/
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  run-slither:
    name: Slither Analysis
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.contracts-changed == 'true'
    env:
      VECHAIN_URL_DEVNET: ${{ secrets.VECHAIN_URL_DEVNET }}
      TESTNET_STAGING_MNEMONIC: ${{ secrets.TESTNET_STAGING_MNEMONIC }}
      MNEMONIC: ${{ secrets.MNEMONIC }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node v22
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: "yarn"

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Cache Solidity compilers
        uses: actions/cache@v3
        with:
          path: ~/.cache/hardhat-nodejs
          key: ${{ runner.os }}-solc-${{ hashFiles('./packages/contracts/hardhat.config.ts') }}
          restore-keys: |
            ${{ runner.os }}-solc-
      - name: Compile contracts
        run: yarn contracts:compile

      - name: Run Slither
        uses: crytic/slither-action@v0.4.0
        id: slither
        with:
          ignore-compile: true
          target: "packages/contracts/"
          solc-version: "0.8.20"
          fail-on: none
          slither-args: --filter-paths "(openzeppelin|mocks|interfaces|deprecated|templates|NodeManagement|external)" --exclude-informational --exclude-optimization --checklist --markdown-root ${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/

      - name: Upload Slither report
        uses: actions/upload-artifact@v4
        with:
          name: slither-report
          path: slither-report.md

      - name: Create/update checklist as PR comment
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        env:
          REPORT: ${{ steps.slither.outputs.stdout }}
        with:
          script: |
            const script = require('.github/scripts/comment')
            const header = '# Slither report'
            const body = process.env.REPORT
            await script({ github, context, header, body })
