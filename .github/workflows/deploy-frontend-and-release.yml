name: Deploy Frontend to Vercel & Release

on:
  push:
    tags: ['v.*']
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref (branch or tag) to build'
        required: true
        default: 'main'
        type: string
      mode:
        description: 'preview-only or promote'
        required: true
        default: 'preview-only'
        type: choice
        options: [preview-only, promote]

permissions:
  contents: write

env:
  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_DEV }}

jobs:
  vercel-preview:
    runs-on: ubuntu-latest
    concurrency:
      group: vercel-prod
      cancel-in-progress: false
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'workflow_dispatch' && inputs.ref || github.ref_name }}
    
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - run: npm i -g vercel@latest
      
      - name: Set Vercel Project
        run: |
          echo "Vercel Project ID: $VERCEL_PROJECT_ID"
          vercel link --token "$VERCEL_TOKEN" --yes --scope "$VERCEL_ORG_ID" --project "$VERCEL_PROJECT_ID"
      
      - run: vercel pull --yes --environment=preview --token "$VERCEL_TOKEN"
      - run:  vercel build --token "$VERCEL_TOKEN"

      # Preview (non-prod): safe to run from any branch/tag
      - id: deploy
        run: |
          URL=$(vercel deploy --prebuilt --token "$VERCEL_TOKEN" | tail -n1)
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          echo "Preview: $URL"

  promote-to-prod:
    needs: vercel-preview
    if: ${{ github.event_name == 'push' || inputs.mode == 'promote' }}
    runs-on: ubuntu-latest
    environment: production
    steps:
      - run: npm i -g vercel@latest
      - run: vercel promote "${{ needs.vercel-preview.outputs.url }}" --token "$VERCEL_TOKEN"

  create-release:
    needs: promote-to-prod
    if: ${{ always() && (github.event_name == 'push') }}
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
          TAG: ${{ github.ref_name }}
        run: |
          command -v gh >/dev/null || { sudo apt-get update && sudo apt-get install -y gh; }
          gh release view "$TAG" >/dev/null 2>&1 || gh release create "$TAG" --title "Release $TAG" --generate-notes
