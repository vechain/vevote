name: Mainnet — Preview or Release
permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Tag/branch/SHA to deploy'
        required: true
        type: string
      target:
        description: 'Deploy as preview or production'
        required: true
        type: choice
        options: [preview, release]
        default: preview

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: test

    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.ref }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install dependencies
        run: npm i -g vercel@latest

      - name: Vercel pull (config + env)
        run: |
          ENVIRONMENT=${{ inputs.target == 'release' && 'production' || 'preview' }}
          vercel pull --yes --environment="$ENVIRONMENT" \
            --token "$VERCEL_TOKEN"

      - name: Debug before build
        run: |
          echo "CWD: $(pwd)"
          ls -la

      - name: Build (debug)
        env:
          VERCEL_DEBUG: 1
        run: |
          PROD_FLAG=$([ "${{ inputs.target }}" = "release" ] && echo "--prod")
          echo "Build with PROD_FLAG: $PROD_FLAG"
          vercel build $PROD_FLAG \
            --token "$VERCEL_TOKEN"

      - name: Deploy
        id: deploy
        run: |
          PROD_FLAG=$([ "${{ inputs.target }}" = "release" ] && echo "--prod")
          URL=$(npx -y vercel@latest deploy --prebuilt $PROD_FLAG --yes \
            --token "$VERCEL_TOKEN"
          echo "url=$URL" >> "$GITHUB_OUTPUT"
          echo "🌐 Deployed: $URL" | tee -a $GITHUB_STEP_SUMMARY
