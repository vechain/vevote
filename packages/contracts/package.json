{
  "name": "@vechain/vevote-contracts",
  "version": "1.0.0",
  "main": "index.ts",
  "description": "Smart contract artifacts and TypeChain factories for VeVote.",
  "types": "index.ts",
  "license": "MIT",
  "scripts": {
    "prepublishOnly": "echo 'Skipping build for npm publish'",
    "test:thor-solo": "npx hardhat test",
    "test:hardhat": "hardhat test --network hardhat",
    "test:coverage:solidity": "hardhat coverage --testfiles ./test/**/*test.ts",
    "coverage:report": "nyc report --reporter=lcov --reporter=text --reporter=html --temp-dir=./coverage",
    "compile": "hardhat compile",
    "build": "yarn compile && tsc -p tsconfig.json",
    "deploy": "npx hardhat run scripts/deploy",
    "deploy:testnet-staging": "npx hardhat run scripts/deploy --network vechain_testnet",
    "deploy:testnet": "npx hardhat run scripts/deploy --network vechain_testnet",
    "deploy:mainnet": "npx hardhat run scripts/deploy --network vechain_mainnet",
    "deploy:release": "npx hardhat run scripts/release",
    "deploy:release:testnet-staging": "npx hardhat run scripts/release --network vechain_testnet",
    "deploy:release:testnet": "npx hardhat run scripts/release --network vechain_testnet",
    "deploy:release:mainnet": "npx hardhat run scripts/release --network vechain_mainnet",
    "check-contracts-deployment": "npx hardhat run scripts/checkContractsDeployment.ts",
    "check-contracts-deployment:staging": "npx hardhat run scripts/checkContractsDeployment.ts --network vechain_testnet",
    "check-contracts-deployment:testnet": "npx hardhat run scripts/checkContractsDeployment.ts --network vechain_testnet",
    "check-contracts-deployment:mainnet": "npx hardhat run scripts/checkContractsDeployment.ts --network vechain_mainnet",
    "upgrade:contract": "npx hardhat run scripts/upgrades/\"$CONTRACT_TO_UPGRADE\"/\"$CONTRACT_TO_UPGRADE\"-\"$CONTRACT_VERSION\".ts",
    "simulation": "npx hardhat run scripts/runSimulation.ts",
    "simulation:staging": "npx hardhat run scripts/runSimulation.ts --network vechain_testnet",
    "start-solo": "docker compose up -d",
    "stop-solo": "docker compose down",
    "clean": "rm -rf dist artifacts typechain-types cache node_modules",
    "lint": "eslint . --ext .ts",
    "format": "eslint . --ext .ts --fix",
    "generate-docs": "npx hardhat docgen",
    "purge": "yarn clean"
  },
  "dependencies": {
    "ethers": "^6.9.0",
    "@vechain/sdk-core": "1.2.0-rc.2",
    "@vechain/sdk-network": "1.2.0-rc.2",
    "@vechain/sdk-hardhat-plugin": "1.2.0-rc.2",
    "@openzeppelin/contracts": "5.0.1",
    "@openzeppelin/contracts-upgradeable": "5.0.1",
    "@openzeppelin/upgrades-core": "^1.32.5"
  },
  "devDependencies": {
    "@nomicfoundation/hardhat-toolbox": "^3.0.0",
    "@nomicfoundation/hardhat-verify": "^1.1.1",
    "@typechain/ethers-v6": "^0.4.3",
    "@types/archiver": "^6.0.2",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-config-turbo": "^2.5.3",
    "eslint-plugin-only-warn": "^1.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-plugin-react": "^7.37.5",
    "prettier": "^3.2.4",
    "@nomicfoundation/hardhat-chai-matchers": "^2.0.2",
    "@nomicfoundation/hardhat-ethers": "^3.0.4",
    "@nomicfoundation/hardhat-network-helpers": "^1.0.10",
    "@nomiclabs/hardhat-etherscan": "^3.0.0",
    "@repo/config": "*",
    "@repo/utils": "*",
    "@typechain/hardhat": "^8.0.0",
    "@types/chai": "^4.2.0",
    "@types/mocha": ">=9.1.0",
    "@vechain/web3-providers-connex": "^1.1.2",
    "archiver": "^7.0.1",
    "axios": "^1.12.0",
    "chai": "^4.2.0",
    "dotenv": "^16.3.1",
    "form-data": "^4.0.4",
    "fs": "^0.0.1-security",
    "hardhat": "^2.19.1",
    "hardhat-contract-sizer": "^2.10.0",
    "hardhat-ignore-warnings": "^0.2.11",
    "inquirer": "^12.7.0",
    "solidity-coverage": "^0.8.11",
    "solidity-docgen": "^0.6.0-beta.36",
    "ts-node": ">=8.0.0",
    "typechain": "^8.1.0",
    "typescript": ">=4.5.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "files": [
    "artifacts/contracts/VeVote.sol/VeVote.json",
    "artifacts/contracts/VeVoteProxy.sol/VeVoteProxy.json",
    "artifacts/contracts/governance/libraries/VeVoteConfigurator.sol/VeVoteConfigurator.json",
    "artifacts/contracts/governance/libraries/VeVoteProposalLogic.sol/VeVoteProposalLogic.json",
    "artifacts/contracts/governance/libraries/VeVoteQuorumLogic.sol/VeVoteQuorumLogic.json",
    "artifacts/contracts/governance/libraries/VeVoteVoteLogic.sol/VeVoteVoteLogic.json",
    "artifacts/contracts/governance/libraries/VeVoteStateLogic.sol/VeVoteStateLogic.json",
    "artifacts/contracts/governance/libraries/VeVoteClockLogic.sol/VeVoteClockLogic.json",
    "artifacts/contracts/governance/libraries/VeVoteConstants.sol/VeVoteConstants.json",
    "artifacts/contracts/governance/libraries/VeVoteTypes.sol/VeVoteTypes.json",
    "index.ts",
    "package.json",
    "README.md"
  ]
}
